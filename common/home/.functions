#!/bin/bash

# ----------------------------------------------------------------------
# COMMON
# ----------------------------------------------------------------------

_bootstrap() {
  ln -sf $DROPBOX/customization/common/home/.* ~
  ln -sf $DROPBOX/customization/common/bin/* ~/bin

  if test -n $OSX; then
    ln -sf $DROPBOX/customization/osx/home/.* ~
    ln -sf $DROPBOX/customization/osx/bin/* ~/bin
  else
    ln -sf $DROPBOX/customization/linux/home/.* ~
    ln -sf $DROPBOX/customization/linux/bin/* ~/bin
  fi
}

_rc_test_shell_type() {
  # detect interactive shell
  case "$-" in
      *i*) INTERACTIVE=1 ;;
      *)   unset INTERACTIVE ;;
  esac

  # # detect login shell
  case "$0" in
      -*) LOGIN=1 ;;
      *)  unset LOGIN ;;
  esac
}


_rc_test_shell_bin() {
  if [ -n "$ZSH_VERSION" ]; then
     ZSH=1
  elif [ -n "$BASH_VERSION" ]; then
     BASH=1
  fi
}


_rc_motd() {
  test -n "$INTERACTIVE" && {
    uname -npsr
    uptime
  }
}


_rc_debug_print() {
  test -n "$DEBUG" && test "$INTERACTIVE" && echo $1
}


_rc_path_append() {
  test -d "$1" && PATH="$PATH:$1"
}


_rc_path_prepend() {
  test -d "$1" && PATH="$1:$PATH"
}


_rc_export_paths() {
  export PATH MANPATH
}


_rc_aliases() {
  test -e "$HOME/.aliases" && source "$HOME/.aliases"
}


_rc_xset() {
  test -n "$HAVE_XSET" && set r rate 250 50
}


# ----------------------------------------------------------------------
# BASH
# ----------------------------------------------------------------------

_rc_setup_prompt_colors() {
  export CLICOLOR=1

  RED="\[\033[0;31m\]"
  BROWN="\[\033[0;33m\]"
  GREY="\[\033[0;97m\]"
  BLUE="\[\033[0;34m\]"
  PS_CLEAR="\[\033[0m\]"
  SCREEN_ESC="\[\033k\033\134\]"
  YELLOW_GREY="\[\e[33;40m\]"
  WHITE_BLACK="\[\e[0m\]"

  if [ "$LOGNAME" = "root" ]; then
      COLOR1="${RED}"
      COLOR2="${BROWN}"
      P="#"
  elif hostname | grep -q 'github\.com'; then
      GITHUB=yep
      COLOR1="\[\e[0;94m\]"
      COLOR2="\[\e[0;92m\]"
      P="\$"
  else
      COLOR1="${BLUE}"
      COLOR2="${BROWN}"
      P="\$"
  fi
}

_rc_setup_dircolors() {
  dircolors="$(type -P gdircolors dircolors | head -1)"
  test -n "$dircolors" && {
    COLORS=/etc/DIR_COLORS
    test -e "/etc/DIR_COLORS.$TERM"   && COLORS="/etc/DIR_COLORS.$TERM"
    test -e "$HOME/.dircolors"        && COLORS="$HOME/.dircolors"
    test ! -e "$COLORS"               && COLORS=
    eval `$dircolors --sh $COLORS`
  }
  unset dircolors
}

_rc_set_prompt_color() {
    PS1="${GREY}[${COLOR1}\u${GREY}@${COLOR2}\h${GREY}:${COLOR1}\W${GREY}]${COLOR2}$P${PS_CLEAR} "
    PS2="\[[33;1m\]continue \[[0m[1m\]> "
}

_rc_setup_completion() {
  if test -z "$BASH_COMPLETION" ; then
    bash=${BASH_VERSION%.*}; bmajor=${bash%.*}; bminor=${bash#*.}
    if [ "$PS1" ] && [ $bmajor -gt 1 ] ; then
      # search for a bash_completion file to source
      for f in /usr/pkg/etc/back_completion \
        /usr/local/etc/bash_completion \
        /opt/local/etc/bash_completion \
        /etc/bash_completion \
        ~/.launcher \
        ~/.bash_completion ;
      do
        test -f $f && {
          . $f
          break
        }
      done
    fi
    unset bash bmajor bminor
  fi
}
